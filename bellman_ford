def bellman_ford(graph, source):
    distances={vertex:float('inf')for vertex in graph}
    distances[source]=0

    for i in range (len(graph)-1):
        for u in graph:
            for v, weight in graph[u].items():
                if distances[u] != float('inf') and distances[u]+weight < distances[v]:
                    distances[v]=distances[u] + weight

    for u in graph:
        for v,weight in graph[u].items():
            if distances[u] !=float ('inf') and distances[u]+weight <distances[v]:
                raise ValueError("Graph contain negative weight cyccle")
    return  distances

graph ={'A': {'B':-1,'C':4},'B':{'C':3,'D':2,'E':2},'C':{},'D':{'B':1,'C':5},'E':{'D':-3}}
source='A'
print(bellman_ford(graph,source))

